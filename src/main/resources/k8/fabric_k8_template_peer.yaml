apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  namespace: DOMAIN
  name:	PEER_NAME-ORG-DOMAIN
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
       app: hyperledger
       role: peer
       peer-id: PEER_NAME
       org: ORG
    spec:
     initContainers:
            - name: init-myservice
              image: "ageapps/k8s-storage-buckets:gcsfuse-init"
    #          command: ['sh', '-c', 'apt-get update && apt-get install --yes --no-install-recommends \
    #                                                                           ca-certificates \
    #                                                                           curl \
    #                                                                         && echo \"deb http://packages.cloud.google.com/apt gcsfuse-jessie main\" \
    #                                                                           | tee /etc/apt/sources.list.d/gcsfuse.list \
    #                                                                         && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \
    #                                                                         && apt-get update \
    #                                                                         && apt-get install --yes gcsfuse \
    #                                                                         && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*;
    #                                                                         gcsfuse -o nonempty hyperledger-poc/sample-network /sample-network']
              command: ['sh', '-c', 'bash /gcsfuse/setUp.sh']
              securityContext:
                 privileged: true
                 capabilities:
                   add:
                     - SYS_ADMIN
              env:
                - name: DESTINATION_DIR
                  value: "/sample-network"
                - name: FUSE_MOUNT_DIR
                  value: "/gcsfuse/buckets/temp"
                - name: FUSE_BUCKET_NAME
                  value: "hyperledger-poc/sample-network"
              volumeMounts:
                     - name: certificate
                       mountPath: /sample-network/crypto-config/peerOrganizations/boa-sample-network/peers/boa-peer0-boa-sample-network/
                     - name: channel
                       mountPath: /sample-network/channel
      containers:
      - name: couchdb
        image: hyperledger/fabric-couchdb:x86_64-0.4.7
        ports:
         - containerPort: COUDH_DB_PORT


      - name: PEER_NAME-ORG-DOMAIN
        image: hyperledger/fabric-peer:x86_64-1.0.0
        env:
        - name: CORE_LEDGER_STATE_STATEDATABASE
          value: "CouchDB"
        - name: CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS
          value: "localhost:COUDH_DB_PORT"
        - name: CORE_VM_ENDPOINT
          value: "unix:///host/var/run/docker.sock"
        - name: CORE_LOGGING_LEVEL
          value: "DEBUG"
        - name: CORE_PEER_TLS_ENABLED
          value: "true"
        - name: CORE_PEER_GOSSIP_USELEADERELECTION
          value: "true"
        - name: CORE_PEER_GOSSIP_ORGLEADER
          value: "false" 
        - name: CORE_PEER_PROFILE_ENABLED
          value: "true"
        - name: CORE_PEER_TLS_CERT_FILE
          value: "/etc/hyperledger/crypto/peer/tls/server.crt"
        - name: CORE_PEER_TLS_KEY_FILE
          value: "/etc/hyperledger/crypto/peer/tls/server.key"
        - name: CORE_PEER_TLS_ROOTCERT_FILE
          value: "/etc/hyperledger/crypto/peer/tls/ca.crt"
        - name: CORE_PEER_ID
          value: PEER_NAME-ORG-DOMAIN
        - name: CORE_PEER_ADDRESS
          value: PEER_NAME-ORG-DOMAIN:PEER_PORT
        - name: CORE_PEER_GOSSIP_EXTERNALENDPOINT
          value: PEER_NAME-ORG-DOMAIN:PEER_PORT
        - name: CORE_PEER_LOCALMSPID
          value: ORGMSP
        workingDir: /opt/gopath/src/github.com/hyperledger/fabric/peer
        ports:
         - containerPort: PEER_PORT
         - containerPort: PEER_CHAINCODE_PORT
         - containerPort: PEER_EVENT_PORT
#        command: ["peer"]
        command: ["/bin/sh"]
        args: ["-c","peer node start;"]
#        apt-get update && apt-get install --yes --no-install-recommends \
#                                          ca-certificates \
#                                          curl \
#                                        && echo \"deb http://packages.cloud.google.com/apt gcsfuse-jessie main\" \
#                                          | tee /etc/apt/sources.list.d/gcsfuse.list \
#                                        && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \
#                                        && apt-get update \
#                                        && apt-get install --yes gcsfuse \
#                                        && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* "]
        securityContext:
          privileged: true
          capabilities:
            add:
             - SYS_ADMIN
        lifecycle:
          postStart:
            exec:
              command: ["gcsfuse", "-o", "nonempty", "GCS_BUCKET/DOMAIN", "/DOMAIN"]
          preStop:
            exec:
              command: ["fusermount", "-u", "/DOMAIN"]
        volumeMounts:
         - mountPath: /etc/hyperledger/crypto/peer
           name: certificate
         - mountPath: /opt/gopath/src/org/peer/channel-artifacts
           name: channel
         - mountPath: /host/var/run/
           name: run
      volumes:
             - name: certificate
      #         hostPath:
      #           path: /sample-network/crypto-config/peerOrganizations/boa-sample-network/peers/boa-peer0-boa-sample-network/
               emptyDir: {}
             - name: run
               hostPath:
                 path: /var/run
                 type: Directory
             - name: channel
      #         hostPath:
      #           path: /sample-network/channel
               emptyDir: {}
       

---
apiVersion: v1
kind: Service
metadata:
   namespace: DOMAIN
   name: PEER_NAME
spec:
 selector:
   app: hyperledger
   role: peer
   peer-id: PEER_NAME
   org: ORG
 type: NodePort
 ports:
   - name: externale-listen-endpoint
     protocol: TCP
     port: PEER_PORT
     targetPort: PEER_PORT
     nodePort: NODEPORT_PEER

   - name: chaincode-listen
     protocol: TCP
     port: PEER_CHAINCODE_PORT
     targetPort: PEER_CHAINCODE_PORT
     nodePort: NODEPORT_CHAINCODE

#   - name: peer-event-listen
#     protocol: TCP
#     port: PEER_EVENT_PORT
#     targetPort: PEER_EVENT_PORT
#     nodePort: NODEPORT_EVENT
---
